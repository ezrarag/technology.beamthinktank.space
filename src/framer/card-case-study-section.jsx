// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 5393b9314a548245 "Osaka Template (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * image?: {src: string, srcSet?: string, alt?: string} // Image
 * title?: string // Title
 * link?: string // Link
}} Props

 */
import { className, css, fonts } from "./chunks/chunk-2ALKGF66.js";
import { routes } from "./chunks/chunk-RIZBGR4E.js";

// virtual:card-case-study-section
import { Fragment as Fragment3 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/3DDGx5D8948ldb74Dotx/FOuaWcBRCGban0Im1vfr/ZGGe6Cnk2.js
import { jsx as _jsx3, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts as addFonts2,
	addPropertyControls as addPropertyControls2,
	ComponentViewportProvider,
	ControlType as ControlType2,
	cx as cx2,
	getFonts,
	getFontsFromSharedStyle,
	Image as Image2,
	Link,
	optimizeAppear,
	RichText,
	useComponentViewport as useComponentViewport2,
	useLocaleInfo as useLocaleInfo2,
	useVariantState as useVariantState2,
	withCSS as withCSS2,
	withFX,
} from "unframer";
import {
	LayoutGroup as LayoutGroup2,
	motion as motion2,
	MotionConfigContext as MotionConfigContext2,
} from "unframer";
import * as React2 from "react";

// /:https://framerusercontent.com/modules/c4IdwMFRiVfs2OXjuOJ1/CETNG0WeCicjnZg8wL1u/Shorten_Title_Limit.js
import { jsx as _jsx } from "react/jsx-runtime";

// /:https://framer.com/m/framer/store.js@^1.0.0
import { useState, useEffect } from "react";
import { Data, useObserveData } from "unframer";
function createStore(state1) {
	const dataStore = Data({
		state: Object.freeze({
			...state1,
		}),
	});
	const setDataStore = (newState) => {
		if (typeof newState === "function") {
			newState = newState(dataStore.state);
		}
		dataStore.state = Object.freeze({
			...dataStore.state,
			...newState,
		});
	};
	let storeState =
		typeof state1 === "object"
			? Object.freeze({
					...state1,
				})
			: state1;
	const storeSetters = /* @__PURE__ */ new Set();
	const setStoreState = (newState) => {
		if (typeof newState === "function") {
			newState = newState(storeState);
		}
		storeState =
			typeof newState === "object"
				? Object.freeze({
						...storeState,
						...newState,
					})
				: newState;
		storeSetters.forEach((setter) => setter(storeState));
	};
	function useStore2() {
		const [state, setState] = useState(storeState);
		useEffect(() => {
			storeSetters.add(setState);
			return () => storeSetters.delete(setState);
		}, []);
		if (useObserveData() === true) {
			useObserveData();
			return [dataStore.state, setDataStore];
		} else {
			return [state, setStoreState];
		}
	}
	return useStore2;
}

// /:https://framer.com/m/framer/utils.js@^0.9.0
var centerContent = {
	display: "flex",
	justifyContent: "center",
	alignItems: "center",
};
var defaultContainerStyles = {
	...centerContent,
	overflow: "hidden",
};

// /:https://framerusercontent.com/modules/c4IdwMFRiVfs2OXjuOJ1/CETNG0WeCicjnZg8wL1u/Shorten_Title_Limit.js
var useStore = createStore({
	background: "#0099FF",
});
function withCharacterLimit(Component3) {
	return (props) => {
		const { text, ...otherProps } = props;
		const limit = 36;
		let trimmedText = text;
		if ((text === null || text === void 0 ? void 0 : text.length) > limit) {
			trimmedText = text.slice(0, limit).trim();
			if (trimmedText.endsWith(".")) {
				trimmedText = trimmedText.slice(0, -1).trim();
			}
			trimmedText += "...";
		}
		return <Component3 {...otherProps} text={trimmedText} />;
	};
}

// /:https://framerusercontent.com/modules/vAokhKcoNzT35mryNfGC/VCRkIsGrULqDr9DqzGel/TAJspriMO.js
import { jsx as _jsx2 } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	Image,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var cycleOrder = ["X7rROry3A"];
var serializationHash = "framer-dyyAX";
var variantClassNames = {
	X7rROry3A: "framer-v-rl4vc3",
};
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var transition1 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 500,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion(React.Fragment);
var getProps = ({ height, icon, id, width, ...props }) => {
	var _ref;
	return {
		...props,
		tMfOBtqCv:
			(_ref = icon !== null && icon !== void 0 ? icon : props.tMfOBtqCv) !==
				null && _ref !== void 0
				? _ref
				: {
						src: "https://framerusercontent.com/images/m34iBIKYEYLNuIWIy8F8pi0uo.svg",
					},
	};
};
var createLayoutDependency = (props, variants) =>
	variants.join("-") + props.layoutDependency;
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		tMfOBtqCv,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		gestureVariant,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "X7rROry3A",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const sharedStyleClassNames = [];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Image
						{...restProps}
						background={{
							alt: "",
							fit: "fill",
							intrinsicHeight: 24,
							intrinsicWidth: 24,
							pixelHeight: 24,
							pixelWidth: 24,
							sizes:
								(componentViewport === null || componentViewport === void 0
									? void 0
									: componentViewport.width) || "100vw",
							...toResponsiveImage(tMfOBtqCv),
						}}
						className={cx(
							serializationHash,
							...sharedStyleClassNames,
							"framer-rl4vc3",
							className2,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						layoutDependency={layoutDependency}
						layoutId={"X7rROry3A"}
						onHoverEnd={() =>
							setGestureState({
								isHovered: false,
							})
						}
						onHoverStart={() =>
							setGestureState({
								isHovered: true,
							})
						}
						onTap={() =>
							setGestureState({
								isPressed: false,
							})
						}
						onTapCancel={() =>
							setGestureState({
								isPressed: false,
							})
						}
						onTapStart={() =>
							setGestureState({
								isPressed: true,
							})
						}
						ref={ref !== null && ref !== void 0 ? ref : ref1}
						style={{
							...style,
						}}
					/>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-dyyAX.framer-1gy9ckx, .framer-dyyAX .framer-1gy9ckx { display: block; }",
	".framer-dyyAX.framer-rl4vc3 { height: 24px; overflow: hidden; position: relative; width: 24px; }",
];
var FramerTAJspriMO = withCSS(Component, css2, "framer-dyyAX");
var stdin_default = FramerTAJspriMO;
FramerTAJspriMO.displayName = "Button [Case Study Section]";
FramerTAJspriMO.defaultProps = {
	height: 24,
	width: 24,
};
addPropertyControls(FramerTAJspriMO, {
	tMfOBtqCv: {
		__defaultAssetReference:
			"data:framer/asset-reference,m34iBIKYEYLNuIWIy8F8pi0uo.svg?originalFilename=Arrow-Right.svg&preferredSize=auto",
		title: "Icon",
		type: ControlType.ResponsiveImage,
	},
});
addFonts(
	FramerTAJspriMO,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// /:https://framerusercontent.com/modules/3DDGx5D8948ldb74Dotx/FOuaWcBRCGban0Im1vfr/ZGGe6Cnk2.js
var RichTextWithCharacterLimit = withCharacterLimit(RichText);
var ButtonCaseStudySectionFonts = getFonts(stdin_default);
var MotionAWithFX = withFX(motion2.a);
var enabledGestures = {
	p7kb8hiKU: {
		hover: true,
	},
};
var cycleOrder2 = ["p7kb8hiKU"];
var serializationHash2 = "framer-7ekpR";
var variantClassNames2 = {
	p7kb8hiKU: "framer-v-4sueyi",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants === null || variants === void 0
		? void 0
		: variants.forEach(
				(variant) =>
					variant && Object.assign(nextOverrides, overrides[variant]),
			);
	return nextOverrides;
}
var transition12 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 500,
	type: "spring",
};
var transition2 = {
	damping: 30,
	delay: 0,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var animation = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1.1,
	skewX: 0,
	skewY: 0,
	transition: transition2,
	x: 0,
	y: 0,
};
var animation1 = {
	opacity: 1,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	transition: transition2,
	x: 0,
	y: 0,
};
var animation2 = {
	opacity: 1e-3,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1.1,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: 0,
};
var toResponsiveImage2 = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition2 = ({ value, children }) => {
	const config = React2.useContext(MotionConfigContext2);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React2.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext2.Provider value={contextValue}>
			{children}
		</MotionConfigContext2.Provider>
	);
};
var Variants2 = motion2(React2.Fragment);
var getProps2 = ({ height, id, image, link, title, width, ...props }) => {
	var _ref;
	return {
		...props,
		egaV1jptI: link !== null && link !== void 0 ? link : props.egaV1jptI,
		IZUbDpKZU: image !== null && image !== void 0 ? image : props.IZUbDpKZU,
		V1NUxCbBb:
			(_ref = title !== null && title !== void 0 ? title : props.V1NUxCbBb) !==
				null && _ref !== void 0
				? _ref
				: "Title",
	};
};
var createLayoutDependency2 = (props, variants) =>
	variants.join("-") + props.layoutDependency;
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo2();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		IZUbDpKZU,
		V1NUxCbBb,
		egaV1jptI,
		...restProps
	} = getProps2(props);
	const {
		baseVariant,
		classNames,
		gestureVariant,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState2({
		cycleOrder: cycleOrder2,
		defaultVariant: "p7kb8hiKU",
		enabledGestures,
		variant,
		variantClassNames: variantClassNames2,
	});
	const layoutDependency = createLayoutDependency2(props, variants);
	const ref1 = React2.useRef(null);
	const defaultLayoutId = React2.useId();
	const sharedStyleClassNames = [className];
	const componentViewport = useComponentViewport2();
	return (
		<LayoutGroup2
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants2 animate={variants} initial={false}>
				<Transition2 value={transition12}>
					<Link href={egaV1jptI}>
						<MotionAWithFX
							{...restProps}
							className={`${cx2(serializationHash2, ...sharedStyleClassNames, "framer-4sueyi", className2, classNames)} framer-1nlsjn7`}
							data-border={true}
							data-framer-name={"Variant 1"}
							layoutDependency={layoutDependency}
							layoutId={"p7kb8hiKU"}
							onHoverEnd={() =>
								setGestureState({
									isHovered: false,
								})
							}
							onHoverStart={() =>
								setGestureState({
									isHovered: true,
								})
							}
							onTap={() =>
								setGestureState({
									isPressed: false,
								})
							}
							onTapCancel={() =>
								setGestureState({
									isPressed: false,
								})
							}
							onTapStart={() =>
								setGestureState({
									isPressed: true,
								})
							}
							ref={ref !== null && ref !== void 0 ? ref : ref1}
							style={{
								"--border-bottom-width": "1px",
								"--border-color": "rgb(233, 236, 241)",
								"--border-left-width": "0px",
								"--border-right-width": "1px",
								"--border-style": "solid",
								"--border-top-width": "0px",
								backgroundColor: "rgb(255, 255, 255)",
								...style,
							}}
							{...addPropertyOverrides(
								{
									"p7kb8hiKU-hover": {
										__framer__presenceAnimate: optimizeAppear(
											"animate",
											"1apg9j4",
											animation1,
											void 0,
										),
										__framer__presenceExit: animation,
										__framer__presenceInitial: optimizeAppear(
											"initial",
											"1apg9j4",
											animation2,
											void 0,
										),
										__perspectiveFX: false,
										__smartComponentFX: true,
										__targetOpacity: 1,
										"data-framer-appear-id": "1apg9j4",
										"data-framer-name": void 0,
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<motion2.div
								className={"framer-mlp9dv"}
								layoutDependency={layoutDependency}
								layoutId={"CCQDLWXYr"}
							>
								<Image2
									background={{
										alt: "",
										fit: "fill",
										sizes: `max(${(componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.width) || "100vw"} - 64px, 0px)`,
										...toResponsiveImage2(IZUbDpKZU),
									}}
									className={"framer-1e733gc"}
									layoutDependency={layoutDependency}
									layoutId={"mbi6GI7vn"}
									style={{
										borderBottomLeftRadius: 10,
										borderBottomRightRadius: 10,
										borderTopLeftRadius: 10,
										borderTopRightRadius: 10,
									}}
								/>
							</motion2.div>
							<motion2.div
								className={"framer-lojrm5"}
								data-border={true}
								data-framer-name={"Post"}
								layoutDependency={layoutDependency}
								layoutId={"JVh0EtEtS"}
								style={{
									"--border-bottom-width": "0px",
									"--border-color": "rgb(233, 236, 241)",
									"--border-left-width": "0px",
									"--border-right-width": "0px",
									"--border-style": "solid",
									"--border-top-width": "1px",
									backgroundColor: "rgb(255, 255, 255)",
								}}
								variants={{
									"p7kb8hiKU-hover": {
										backgroundColor: "rgb(246, 248, 250)",
									},
								}}
							>
								<RichTextWithCharacterLimit
									__fromCanvasComponent={true}
									className={"framer-1dkvz9d"}
									data-framer-name={"Title"}
									fonts={["Inter"]}
									layoutDependency={layoutDependency}
									layoutId={"yebYUH0Jo"}
									style={{
										"--framer-paragraph-spacing": "0px",
									}}
									text={V1NUxCbBb}
									verticalAlignment={"top"}
									withExternalLayout={true}
								>
									<React2.Fragment>
										<motion2.h1
											className={"framer-styles-preset-1gh6fhc"}
											data-styles-preset={"wOLsulpos"}
										>
											{"Title"}
										</motion2.h1>
									</React2.Fragment>
								</RichTextWithCharacterLimit>
								<ComponentViewportProvider width={"24px"}>
									<motion2.div
										className={"framer-14wbihq-container"}
										layoutDependency={layoutDependency}
										layoutId={"FrhAHJav_-container"}
									>
										{_jsx3(stdin_default, {
											height: "100%",
											id: "FrhAHJav_",
											layoutId: "FrhAHJav_",
											style: {
												height: "100%",
												width: "100%",
											},
											width: "100%",
										})}
									</motion2.div>
								</ComponentViewportProvider>
							</motion2.div>
						</MotionAWithFX>
					</Link>
				</Transition2>
			</Variants2>
		</LayoutGroup2>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-7ekpR.framer-1nlsjn7, .framer-7ekpR .framer-1nlsjn7 { display: block; }",
	".framer-7ekpR.framer-4sueyi { align-content: flex-start; align-items: flex-start; cursor: pointer; display: flex; flex-direction: column; flex-wrap: wrap; gap: 0px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: 379px; }",
	".framer-7ekpR .framer-mlp9dv { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 32px; position: relative; width: 100%; }",
	".framer-7ekpR .framer-1e733gc { flex: 1 0 0px; height: 332px; position: relative; width: 1px; }",
	".framer-7ekpR .framer-lojrm5 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; height: min-content; justify-content: space-between; overflow: visible; padding: 24px 32px 24px 32px; position: relative; width: 100%; }",
	".framer-7ekpR .framer-1dkvz9d { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-7ekpR .framer-14wbihq-container { flex: none; height: 24px; position: relative; width: 24px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-7ekpR.framer-4sueyi, .framer-7ekpR .framer-mlp9dv { gap: 0px; } .framer-7ekpR.framer-4sueyi > * { margin: 0px; margin-bottom: calc(0px / 2); margin-top: calc(0px / 2); } .framer-7ekpR.framer-4sueyi > :first-child { margin-top: 0px; } .framer-7ekpR.framer-4sueyi > :last-child { margin-bottom: 0px; } .framer-7ekpR .framer-mlp9dv > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-7ekpR .framer-mlp9dv > :first-child { margin-left: 0px; } .framer-7ekpR .framer-mlp9dv > :last-child { margin-right: 0px; } }",
	".framer-7ekpR.framer-v-4sueyi.hover .framer-lojrm5 { padding: 24px; }",
	...css,
	'.framer-7ekpR[data-border="true"]::after, .framer-7ekpR [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerZGGe6Cnk2 = withCSS2(Component2, css3, "framer-7ekpR");
var stdin_default2 = FramerZGGe6Cnk2;
FramerZGGe6Cnk2.displayName = "Card [Case Study Section]";
FramerZGGe6Cnk2.defaultProps = {
	height: 468,
	width: 378.5,
};
addPropertyControls2(FramerZGGe6Cnk2, {
	IZUbDpKZU: {
		title: "Image",
		type: ControlType2.ResponsiveImage,
	},
	V1NUxCbBb: {
		defaultValue: "Title",
		title: "Title",
		type: ControlType2.String,
	},
	egaV1jptI: {
		title: "Link",
		type: ControlType2.Link,
	},
});
addFonts2(
	FramerZGGe6Cnk2,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://app.framerstatic.com/Inter-Regular.cyrillic-ext-CFTLRB35.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://app.framerstatic.com/Inter-Regular.cyrillic-KKLZBALH.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://app.framerstatic.com/Inter-Regular.greek-ext-ULEBLIFV.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://app.framerstatic.com/Inter-Regular.greek-IRHSNFQB.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://app.framerstatic.com/Inter-Regular.latin-ext-VZDUGU3Q.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://app.framerstatic.com/Inter-Regular.latin-JLQMKCHE.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://app.framerstatic.com/Inter-Regular.vietnamese-QK7VSWXK.woff2",
					weight: "400",
				},
			],
		},
		...ButtonCaseStudySectionFonts,
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:card-case-study-section
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"5393b9314a5482450bd063fdec2abaa51e33580d8faa88cac3362a540b16df77"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders CardCaseStudySectionFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"5393b9314a5482450bd063fdec2abaa51e33580d8faa88cac3362a540b16df77"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var card_case_study_section_default = ComponentWithRoot;
export { card_case_study_section_default as default };
