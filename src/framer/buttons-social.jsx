// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 5393b9314a548245 "Osaka Template (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * icon?: {src: string, srcSet?: string, alt?: string} // Icon
 * link?: string // Link
 * platform?: string // Platform
}} Props

 */
import { className, css, fonts } from "./chunks/chunk-2ALKGF66.js";
import { routes } from "./chunks/chunk-RIZBGR4E.js";

// virtual:buttons-social
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/j058hpJp8ktcjlxD8SW0/xWLmECZZnIY2pzYvnMh6/YumnNcbFE.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	Image,
	Link,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var cycleOrder = ["aR_0tgp6v"];
var serializationHash = "framer-mKn0v";
var variantClassNames = {
	aR_0tgp6v: "framer-v-1j81gma",
};
var transition1 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 500,
	type: "spring",
};
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion(React.Fragment);
var getProps = ({ height, icon, id, link, platform, width, ...props }) => {
	var _ref, _ref1;
	return {
		...props,
		m_4oN8qZm:
			(_ref =
				platform !== null && platform !== void 0
					? platform
					: props.m_4oN8qZm) !== null && _ref !== void 0
				? _ref
				: "Instagram",
		n7j8zmE85: link !== null && link !== void 0 ? link : props.n7j8zmE85,
		S1jA2KwbZ:
			(_ref1 = icon !== null && icon !== void 0 ? icon : props.S1jA2KwbZ) !==
				null && _ref1 !== void 0
				? _ref1
				: {
						src: "https://framerusercontent.com/images/D8MgD7MyIb1BINqwaarw0E30zQ.svg",
					},
	};
};
var createLayoutDependency = (props, variants) =>
	variants.join("-") + props.layoutDependency;
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		S1jA2KwbZ,
		n7j8zmE85,
		m_4oN8qZm,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		gestureVariant,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "aR_0tgp6v",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const sharedStyleClassNames = [className];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Link href={n7j8zmE85}>
						<motion.a
							{...restProps}
							className={`${cx(serializationHash, ...sharedStyleClassNames, "framer-1j81gma", className2, classNames)} framer-1nra58y`}
							data-framer-name={"Variant 1"}
							layoutDependency={layoutDependency}
							layoutId={"aR_0tgp6v"}
							onHoverEnd={() =>
								setGestureState({
									isHovered: false,
								})
							}
							onHoverStart={() =>
								setGestureState({
									isHovered: true,
								})
							}
							onTap={() =>
								setGestureState({
									isPressed: false,
								})
							}
							onTapCancel={() =>
								setGestureState({
									isPressed: false,
								})
							}
							onTapStart={() =>
								setGestureState({
									isPressed: true,
								})
							}
							ref={ref !== null && ref !== void 0 ? ref : ref1}
							style={{
								...style,
							}}
						>
							<motion.div
								className={"framer-1yfous8"}
								data-border={true}
								data-framer-name={"Social Buttons"}
								layoutDependency={layoutDependency}
								layoutId={"n96xNCB41"}
								style={{
									"--border-bottom-width": "1px",
									"--border-color": "rgb(233, 237, 241)",
									"--border-left-width": "1px",
									"--border-right-width": "1px",
									"--border-style": "solid",
									"--border-top-width": "1px",
									borderBottomLeftRadius: 40,
									borderBottomRightRadius: 40,
									borderTopLeftRadius: 40,
									borderTopRightRadius: 40,
								}}
							>
								<Image
									background={{
										alt: "",
										fit: "fill",
										intrinsicHeight: 24,
										intrinsicWidth: 24,
										pixelHeight: 24,
										pixelWidth: 24,
										sizes: "24px",
										...toResponsiveImage(S1jA2KwbZ),
									}}
									className={"framer-1newu29"}
									layoutDependency={layoutDependency}
									layoutId={"qJht0qLLR"}
								/>
							</motion.div>
							<RichText
								__fromCanvasComponent={true}
								className={"framer-18iwe4t"}
								data-framer-name={"Instagram"}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"ZKYfIZscX"}
								style={{
									"--extracted-gdpscs":
										"var(--token-e2b7c12a-f254-4034-80bb-3aca0e10bf19, rgb(13, 13, 18))",
									"--framer-paragraph-spacing": "0px",
								}}
								text={m_4oN8qZm}
								verticalAlignment={"top"}
								withExternalLayout={true}
							>
								<React.Fragment>
									<motion.h1
										className={"framer-styles-preset-1gh6fhc"}
										data-styles-preset={"wOLsulpos"}
										style={{
											"--framer-text-color":
												"var(--extracted-gdpscs, var(--token-e2b7c12a-f254-4034-80bb-3aca0e10bf19, rgb(13, 13, 18)))",
										}}
									>
										{"Instagram"}
									</motion.h1>
								</React.Fragment>
							</RichText>
						</motion.a>
					</Link>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-mKn0v.framer-1nra58y, .framer-mKn0v .framer-1nra58y { display: block; }",
	".framer-mKn0v.framer-1j81gma { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: min-content; }",
	".framer-mKn0v .framer-1yfous8 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 4px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-mKn0v .framer-1newu29 { flex: none; height: 24px; overflow: visible; position: relative; width: 24px; }",
	".framer-mKn0v .framer-18iwe4t { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-mKn0v.framer-1j81gma, .framer-mKn0v .framer-1yfous8 { gap: 0px; } .framer-mKn0v.framer-1j81gma > *, .framer-mKn0v .framer-1yfous8 > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-mKn0v.framer-1j81gma > :first-child, .framer-mKn0v .framer-1yfous8 > :first-child { margin-left: 0px; } .framer-mKn0v.framer-1j81gma > :last-child, .framer-mKn0v .framer-1yfous8 > :last-child { margin-right: 0px; } }",
	...css,
	'.framer-mKn0v[data-border="true"]::after, .framer-mKn0v [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerYumnNcbFE = withCSS(Component, css2, "framer-mKn0v");
var stdin_default = FramerYumnNcbFE;
FramerYumnNcbFE.displayName = "Buttons [Social]";
FramerYumnNcbFE.defaultProps = {
	height: 32,
	width: 115.5,
};
addPropertyControls(FramerYumnNcbFE, {
	S1jA2KwbZ: {
		__defaultAssetReference:
			"data:framer/asset-reference,D8MgD7MyIb1BINqwaarw0E30zQ.svg?originalFilename=instagram-pixel.svg&preferredSize=auto",
		title: "Icon",
		type: ControlType.ResponsiveImage,
	},
	n7j8zmE85: {
		title: "Link",
		type: ControlType.Link,
	},
	m_4oN8qZm: {
		defaultValue: "Instagram",
		displayTextArea: false,
		title: "Platform",
		type: ControlType.String,
	},
});
addFonts(
	FramerYumnNcbFE,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://app.framerstatic.com/Inter-Regular.cyrillic-ext-CFTLRB35.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://app.framerstatic.com/Inter-Regular.cyrillic-KKLZBALH.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://app.framerstatic.com/Inter-Regular.greek-ext-ULEBLIFV.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://app.framerstatic.com/Inter-Regular.greek-IRHSNFQB.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://app.framerstatic.com/Inter-Regular.latin-ext-VZDUGU3Q.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://app.framerstatic.com/Inter-Regular.latin-JLQMKCHE.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://app.framerstatic.com/Inter-Regular.vietnamese-QK7VSWXK.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:buttons-social
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"5393b9314a5482450bd063fdec2abaa51e33580d8faa88cac3362a540b16df77"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ButtonsSocialFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"5393b9314a5482450bd063fdec2abaa51e33580d8faa88cac3362a540b16df77"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var buttons_social_default = ComponentWithRoot;
export { buttons_social_default as default };
